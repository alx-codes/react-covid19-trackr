{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dialyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0bf4ff7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3BhLI\",\"card\":\"Cards_card__1O_8E\",\"infected\":\"Cards_infected__12MLx\",\"recovered\":\"Cards_recovered__1tKLn\",\"deaths\":\"Cards_deaths__1I4tY\"};","import React from 'react'\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nimport styles from './Cards.module.css'\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\tif(!confirmed) {\r\n\t\treturn \"Loading...\"\r\n\t}\r\n\treturn (\r\n\t\t\r\n\t\t<div className={styles.container}>\r\n\t\t\t<Grid container spacing={3} justify=\"center\">\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Infectados</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">Número de casos infectados de COVID-19</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Recuperados</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">Número de casos activos de COVID-19</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Muertes</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">Número de muertes causadas por COVID-19</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Cards","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nexport const fetchData = async (country) => {\r\n\tlet changeableUrl = url;\r\n\r\n\tif(country) {\r\n\t\tif(country != 'global') changeableUrl = `${url}/countries/${country}`\r\n\t}\r\n\ttry {\r\n\t\tconst { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n\t\treturn { confirmed, recovered, deaths, lastUpdate };\r\n\t} catch (error) {\r\n\t\tconsole.log(error)\r\n\t}\r\n}\r\n\r\nexport const fetchDailyData = async (country) => {\r\n\ttry {\r\n\t\tconst { data } = await axios.get(`${url}/daily`)\r\n\r\n\t\tconst modifiedData = data.map((dialyData) => ({\r\n\t\t\tconfirmed: dialyData.confirmed.total,\r\n\t\t\tdeaths: dialyData.deaths.total,\r\n\t\t\tdate: dialyData.reportDate\r\n\t\t}))\r\n\r\n\t\treturn modifiedData\r\n\t} catch (error) {\r\n\t\tconsole.log(error)\r\n\t}\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n\ttry {\r\n\t\tconst { data: { countries } } = await axios.get(`${url}/countries`)\r\n\t\treturn countries.map((country) => country.name)\r\n\t} catch (error) {\r\n\t\tconsole.log(error)\r\n\t}\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { fetchDailyData } from '../../api'\r\nimport { Line, Bar } from 'react-chartjs-2'\r\n\r\n\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths}, country }) => {\r\n\tconst [dailyData, setDailyData] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetDailyData(await fetchDailyData())\r\n\t\t}\r\n\t\tfetchAPI()\r\n\t}, [])\r\n\r\n\tconst lineChart = ( \r\n\t\tdailyData.length\r\n\t\t\t? (\r\n\t\t\t\t<Line\r\n\t\t\t\t\tdata={\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabels: dailyData.map(({ date }) => date),\r\n\t\t\t\t\t\t\tdatasets: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed),\r\n\t\t\t\t\t\t\t\t\tlabel: 'Infected',\r\n\t\t\t\t\t\t\t\t\tborderColor: \"#3333ff\",\r\n\t\t\t\t\t\t\t\t\tfill: true\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths),\r\n\t\t\t\t\t\t\t\t\tlabel: 'Deaths',\r\n\t\t\t\t\t\t\t\t\tborderColor: \"#ff0000\",\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"rgba(0, 0, 0, 0.5\",\r\n\t\t\t\t\t\t\t\t\tfill: true\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t) : null\r\n\t)\r\n\r\n\tconst barChart = (\r\n\t\tconfirmed \r\n\t\t\t? (\r\n\t\t\t\t<Bar \r\n\t\t\t\t\tdata = {\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabels: ['Infectados', 'Recuperados', 'Muertos'],\r\n\t\t\t\t\t\t\tdatasets: [{\r\n\t\t\t\t\t\t\t\tlabel: 'People',\r\n\t\t\t\t\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\t\t\t\t'rgba(0, 0, 255, 0.5)',\r\n\t\t\t\t\t\t\t\t\t'rgba(0, 255, 0, 0.5)',\r\n\t\t\t\t\t\t\t\t\t'rgba(255, 0, 0, 0.5)',\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\tdata: [confirmed.value, recovered.value, deaths.value]\r\n\t\t\t\t\t\t\t}]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\toptions={\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlegend: { display:false },\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t) : null\r\n\r\n\t)\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t{country ? barChart : lineChart}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Chart","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\tconst [ fetchedCountries, setFetchedCountries ] = useState([]);\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetFetchedCountries(await fetchCountries());\r\n\t\t};\r\n\t\tfetchAPI()\r\n\t}, [setFetchedCountries]);\r\n\treturn (\r\n\t\t<FormControl className={styles.formControl}>\r\n\t\t\t<NativeSelect defaultValue=\"\" onChange={(e) =>  handleCountryChange(e.target.value)}>\r\n\t\t\t\t<option value=\"global\">Global</option>\r\n\t\t\t\t{fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n\t\t\t</NativeSelect>\r\n\t\t</FormControl> \r\n\t);\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React, { Component } from 'react'\n\nimport { Cards, Chart, CountryPicker } from './components'\nimport styles from './App.module.css'\nimport { fetchData } from './api'\n\nclass App extends Component {\n\tstate = {\n\t\tdata: {},\n\t\tcountry: ''\n\t}\n\n\tasync componentDidMount() {\n\t\tconst fetchedData = await fetchData();\n\t\tthis.setState({ data: fetchedData })\n\t}\n\n\thandleCountryChange = async (country) => {\n\t\tconst fetchedData = await fetchData(country);\n\t\tthis.setState({ data: fetchedData, country:country})\n\t}\n\n\trender() {\n\t\tconst { data, country } = this.state;\n\t\treturn (\n\t\t\t<div className={styles.container}>\n\t\t\t\t<CountryPicker handleCountryChange={this.handleCountryChange} />\n\t\t\t\t<Cards data={data} />\n\t\t\t\t<Chart data ={data} country={country} />\n\t\t\t</div>\n\t\t)\n\t}\n}\nexport default App;"," import React from 'react'\n import ReactDOM from 'react-dom'\n \n import App from './App'\n\n ReactDOM.render(<App />, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__i8x3u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1IK1O\"};"],"sourceRoot":""}